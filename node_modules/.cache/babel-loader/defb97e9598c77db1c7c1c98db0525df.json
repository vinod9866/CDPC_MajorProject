{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinnu\\\\Documents\\\\react\\\\my-app\\\\src\\\\auth\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport Card from \"../ui/card\";\nimport classes from './login.module.css';\nimport loginlogo from './login.png';\nimport { useRef, useState, useContext } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport AuthContext from \"../auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(props) {\n  _s();\n\n  const navigate = useNavigate();\n  const [state, setState] = useState(true);\n  const user = useRef();\n  const pswd = useRef();\n  const authCtx = useContext(AuthContext);\n\n  function submitHandler(event) {\n    event.preventDefault();\n    const User = user.current.value;\n    const Pswd = pswd.current.value;\n    const Data = {\n      Name: User,\n      Password: Pswd\n    };\n    console.log(Data);\n    fetch('http://http://3.12.85.141:/oauth/token?grant_type=password&username=' + User + '&password=' + Pswd + '', {\n      method: 'POST',\n      body: JSON.stringify(Data),\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": \"Y2xpZW50OnBhc3N3b3Jk\"\n      }\n    }).then(res => {\n      if (res.ok) {\n        setState(true);\n        console.log(res);\n        return res.json(); // navigate(\"/all\",{replace:true});\n      } else {\n        return res.json().then(data => {\n          if (data && data.error && data.error.message) {\n            setState(false); //it is main key\n          }\n\n          setState(false); //just for testing\n        });\n      }\n    }).then(data => {\n      authCtx.login(data.idToken);\n    }); //based on some condition setState()\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: loginlogo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: submitHandler,\n      children: [state && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.info,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-info-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), \"\\xA0 Use SMS credentials to login\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 22\n      }, this), !state && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.error,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-times-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), \"\\xA0 Username or Password is incorret\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Username \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          id: \"user\",\n          ref: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          required: true,\n          id: \"pswd\",\n          ref: pswd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Login, \"7ouRWpJ4msj8wcpVrfLP8QOeIoc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/vinnu/Documents/react/my-app/src/auth/login.js"],"names":["Card","classes","loginlogo","useRef","useState","useContext","useNavigate","AuthContext","Login","props","navigate","state","setState","user","pswd","authCtx","submitHandler","event","preventDefault","User","current","value","Pswd","Data","Name","Password","console","log","fetch","method","body","JSON","stringify","headers","then","res","ok","json","data","error","message","login","idToken","form","info","control","actions"],"mappings":"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","sourcesContent":["import Card from \"../ui/card\";\r\nimport classes from './login.module.css';\r\nimport loginlogo from './login.png';\r\nimport {useRef, useState,useContext} from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport AuthContext from \"../auth-context\";\r\n\r\nfunction Login(props){\r\n    const navigate = useNavigate();\r\n    const [state,setState] = useState(true);\r\n    const user = useRef();\r\n    const pswd = useRef();\r\n\r\n    const authCtx = useContext(AuthContext);\r\n\r\n    function submitHandler(event){\r\n        event.preventDefault();\r\n\r\n        const User = user.current.value;\r\n        const Pswd = pswd.current.value;\r\n\r\n        const Data = {\r\n            Name : User,\r\n            Password : Pswd\r\n        };\r\n        console.log(Data);\r\n\r\n        fetch('http://http://3.12.85.141:/oauth/token?grant_type=password&username='+User+'&password='+Pswd+'',\r\n        {\r\n            method:'POST',\r\n            body:JSON.stringify(Data),\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                \"Authorization\" :\"Y2xpZW50OnBhc3N3b3Jk\",\r\n            }\r\n        }\r\n        ).then((res)=>{\r\n                if (res.ok){\r\n                    setState(true);\r\n                    console.log(res);\r\n                    return res.json();\r\n                    \r\n                    // navigate(\"/all\",{replace:true});\r\n                }\r\n                else{\r\n                    return res.json().then((data)=>{\r\n                        if (data && data.error && data.error.message){\r\n                            setState(false); //it is main key\r\n                        }\r\n                        setState(false); //just for testing\r\n\r\n                    })\r\n                    \r\n                }\r\n        }).then((data)=>{\r\n            authCtx.login(data.idToken);   \r\n        })\r\n                    \r\n            //based on some condition setState()\r\n\r\n        \r\n    }\r\n\r\n    return <Card>\r\n        <img src={loginlogo}  />\r\n        <form className={classes.form} onSubmit={submitHandler}>\r\n            {state &&<div className={classes.info}>\r\n                <i className=\"fa fa-info-circle\"></i>&nbsp;\r\n                Use SMS credentials to login\r\n            </div>}\r\n            {!state &&<div className={classes.error}>\r\n                <i className=\"fa fa-times-circle\"></i>&nbsp;\r\n                Username or Password is incorret\r\n            </div>}\r\n\r\n\r\n            <div className={classes.control}>\r\n                    <label htmlFor=\"title\">Username </label>\r\n                    <input type=\"text\" required id='user'  ref={user}></input>\r\n                </div>\r\n            <div className={classes.control}>\r\n                    <label htmlFor=\"title\">Password</label>\r\n                    <input type=\"password\" required id='pswd' ref={pswd}></input>\r\n            </div>\r\n\r\n            <div className={classes.actions}>\r\n                    <button>Submit</button>\r\n            </div>\r\n\r\n        </form>\r\n    </Card>\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}